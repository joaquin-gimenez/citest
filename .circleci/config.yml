# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.1-node-browsers
      - image: postgres:9.6
        environment:
            - POSTGRES_USER=postgres
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
            - checkout
            - run:
                name: Install PostgreSQL client tools
                command: |
                  sudo apt-get update && sudo apt-get install postgresql-client
            - run:
                name: Install and enable pdo_pgsql php extension
                command: |
                  sudo apt-get update && sudo apt-get install libpq-dev
                  sudo docker-php-ext-install pdo_pgsql && sudo docker-php-ext-enable pdo_pgsql
            - run:
                name: Update composer
                command: sudo composer self-update
            - run: echo 'export APP_ENV="testing"' >> $BASH_ENV
            - run: sudo apt-get install -y libsqlite3-dev
            # - run:
            #     name: Install Chrome
            #     command: |
            #       wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            #       sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            #       sudo apt-get update
            #       sudo apt-get install google-chrome-stable
            - run: composer install -n --ignore-platform-reqs
            - run:
                name: Prep the database and user, install extensions etc.
                command: |
                  sudo -u root psql -h 127.0.0.1 -U postgres -c "create database citest"
                  sudo -u root psql -h 127.0.0.1 -U postgres -c "create user circle_db_user password 'secret'"
                  sudo -u root psql -h 127.0.0.1 -U postgres -c "grant all on database citest to circle_db_user"
                  sudo -u root psql -h 127.0.0.1 -U postgres citest -c "create extension citext"
            - run: cp .env.travis .env && php artisan key:generate
            - run:
                name: Run database migrations
                command: php artisan migrate --force
            - run: npm install
            - run: npm run production
            # - run: vendor/bin/phpunit
            - run:
                name: update Laravel Dusk Tests
                command: chmod -R 0755 vendor/laravel/dusk/bin/
            # - run:
            #     name: Start Chrome Driver
            #     command: ./vendor/laravel/dusk/bin/chromedriver-linux
            #     background: true

            - run:
                name: Run Laravel Server
                command: php artisan serve
                background: true

            - run:
                name: update Laravel Dusk Tests
                command: php artisan dusk:chrome-driver 71
            - run:
                name: Run Laravel Dusk Tests
                command: php artisan dusk
